import {CoreModelsInterface} from '../../interface/core-models-interface.tsx';
import * as yup from 'yup';
import {InferType} from 'yup';

export const schemaFieldSearch = yup
  .object({
    name: yup.string().required('–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É'),
  })
  .required();

export const fieldsChats: Array<CoreModelsInterface.DataFiled> = [
  {name: 'name', type: 'text', label: '', placeholder: '–ü–æ—à—É–∫'},
];

export const schemaMessage = yup
  .object({
    message: yup.string().required('—Ç–µ–∫—Å—Ç'),
  })
  .required();

export const fieldsMessage: Array<CoreModelsInterface.DataFiled> = [
  {
    name: 'message',
    type: 'textarea',
    label: '',
    placeholder: '–ù–∞–ø–∏—Å–∞–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...',
  },
];
export const chatsList: Array<CoreModelsInterface.Chat> = [
  {
    id: 1,
    name: 'AP Assistant',
    countMessage: 0,
    lastMessage: '‚ùóÔ∏è –ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –∂–æ–¥–Ω–∏—Ö –∑–∞—è–≤–æ–∫, —â–æ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å –ø–æ–≥–æ–¥–∂–µ–Ω–Ω—è.',
    image: null,
    data: new Date().toISOString(),
    message: {messageText: ''},
  },
  {
    id: 2,
    name: 'AP Elevator ',
    countMessage: 2,
    lastMessage:
      '–í–∏ –æ–±—Ä–∞–ª–∏ –≤—ñ–¥–ø—É—Å—Ç–∫—É –ø–æ –∫–æ–º–ø–∞–Ω—ñ—ó "–ê–ì–†–û–ü–†–û–°–ü–ï–†–Ü–°, –¢–û–í" –í–∫–∞–∂—ñ—Ç—å –¥–∞—Ç—É –ø–æ—á–∞—Ç–∫—É –≤—ñ–¥–ø—É—Å—Ç–∫–∏ —É —Ñ–æ—Ä–º–∞—Ç—ñ –î–î.–ú–ú.–†–†–†–† . –ù–∞–ø—Ä–∏–∫–ª–∞–¥: 13.03.2025 üëá',
    image: null,
    data: new Date().toISOString(),
    message: {messageText: ''},
  },
  {
    id: 3,
    name: 'AP Logistic ',
    countMessage: 1,
    lastMessage:
      '–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –ê–ü –ü–æ–º—ñ—á–Ω–∏–∫ –ë–∞–∂–∞—î–º–æ –ø—Ä–∏—î–º–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è! ‚òÄÔ∏è',
    image: null,
    data: new Date().toISOString(),
    message: {messageText: ''},
  },
];

type fieldSearch = InferType<typeof schemaFieldSearch>;
type fieldMessages = InferType<typeof schemaMessage>;
